call silver.load_silver()

DELIMITER $$

Create procedure silver.load_silver() 
begin

-- Inserting data into silver customer table

INSERT INTO silver.crm_cust_info (
    cst_id, 
    cst_key, 
    cst_firstname, 
    cst_lastname, 
    cst_marital_status, 
    cst_gndr,
    cst_create_date
    
)
SELECT
    cst_id,
    cst_key,
    TRIM(cst_firstname) AS cst_firstname,
    TRIM(cst_lastname)  AS cst_lastname,

    -- Marital status transformation
    CASE 
        WHEN UPPER(TRIM(cst_marital_status)) = 'S' THEN 'Single'
        WHEN UPPER(TRIM(cst_marital_status)) = 'M' THEN 'Married'
        ELSE 'NA'
    END AS cst_marital_status,

    -- Gender transformation/ data normalization and standarization
    -- handling missing data
    CASE 
        WHEN UPPER(TRIM(cst_gndr)) = 'F' THEN 'Female'
        WHEN UPPER(TRIM(cst_gndr)) = 'M' THEN 'Male'
        ELSE 'NA'
    END AS cst_gndr,

    cst_create_date_clean
FROM (
    SELECT 
        cst_id,
        cst_key,
        cst_firstname,
        cst_lastname,
        cst_marital_status,
        cst_gndr,

        -- Clean date here so ROW_NUMBER doesnâ€™t choke
        COALESCE(
            STR_TO_DATE(NULLIF(CAST(cst_create_date AS CHAR), '0000-00-00'), '%Y-%m-%d'),
            '1970-01-01'
        ) AS cst_create_date_clean,
-- removing duplicates and filtering
        ROW_NUMBER() OVER (
            PARTITION BY cst_id 
            ORDER BY COALESCE(
                STR_TO_DATE(NULLIF(CAST(cst_create_date AS CHAR), '0000-00-00'), '%Y-%m-%d'),
                '1970-01-01'
            ) DESC
        ) AS flag_last
    FROM bronze.crm_cust_info
) t
WHERE flag_last = 1;

-- ----------------------------------------------------------------------------------------------------------------------------

-- Inserting data into silver product table 

INSERT INTO silver.crm_prd_info (
  prd_id,
  cat_id,
  prd_key,
  prd_nm,
  prd_cost,
  prd_line,
  prd_start_dt,
  prd_end_dt,
  dwh_create_date
)
SELECT 
  prd_id,
  REPLACE(SUBSTRING(prd_key, 1, 5), '-', '_') AS cat_id,   
  SUBSTRING(prd_key, 7) AS prd_key,                        
  prd_nm,
  IFNULL(prd_cost, 0) AS prd_cost,
  CASE 
    WHEN UPPER(TRIM(prd_line)) = 'M' THEN 'Mountain'
    WHEN UPPER(TRIM(prd_line)) = 'R' THEN 'Road'
    WHEN UPPER(TRIM(prd_line)) = 'S' THEN 'Other sales'
    WHEN UPPER(TRIM(prd_line)) = 'T' THEN 'Touring'
    ELSE 'n/a'
  END AS prd_line,
  CAST(prd_start_dt AS DATE) AS prd_start_dt,
  CAST(DATE_SUB(
    LEAD(prd_start_dt) OVER (PARTITION BY prd_key ORDER BY prd_start_dt),
    INTERVAL 1 DAY
  ) AS DATE) AS prd_end_dt,                                         
  CURRENT_DATE() AS dwh_create_date                       
FROM bronze.crm_prd_info;

-- ---------------------------------------------------------------------------------------------------------------------------

-- Inserting data into sales table

Insert into silver.crm_sales_details(
  sls_ord_num,
  sls_prd_key,
  sls_cust_id,
  sls_order_dt,
  sls_ship_dt,
  sls_due_dt,
  sls_sales,
  sls_quantity,
  sls_price
  )

SELECT 
  sls_ord_num,
  sls_prd_key,
  sls_cust_id,
  CASE 
    WHEN sls_order_dt = 0 OR LENGTH(CAST(sls_order_dt AS CHAR)) != 8 THEN NULL
    ELSE CAST(CAST(sls_order_dt AS CHAR) AS DATE)
  END AS sls_order_dt,
 CASE 
    WHEN sls_ship_dt = 0 OR LENGTH(CAST(sls_ship_dt AS CHAR)) != 8 THEN NULL
    ELSE CAST(sls_ship_dt  AS DATE)
  END AS sls_ship_dt,
  CASE 
    WHEN sls_due_dt = 0 OR LENGTH(CAST(sls_due_dt AS CHAR)) != 8 THEN NULL
    ELSE CAST(sls_due_dt  AS DATE)
  END AS sls_due_dt,
   case when sls_sales is null or sls_sales <=0 or sls_sales != sls_quantity * abs(sls_price)
 then  sls_quantity * abs(sls_price)
 else sls_sales
 end as sls_sales,
  sls_quantity,
  case when sls_price is null or sls_price <=0 THEN sls_sales / CAST(sls_quantity AS DECIMAL(10,2))
 else sls_price
 end as sls_price
FROM bronze.crm_sales_details;

-- ---------------------------------------------------------------------------------------------------------------------------------

-- Inserting data into Silver erp customer table 

Insert into silver.erp_cust_az12
(
cid,
bdate,
gen
)
Select 
case when cid like 'NAS%' THEN Substring(cid, 4)
else cid
end cid,
case when bdate> curdate() then null
else bdate
end as bdate,
case when upper(trim(gen)) in ('F', 'Female') then 'Female'
    when upper(trim(gen)) in ('M', 'Male') then 'Male'
else 'N/A'
end as gen
from bronze.erp_cust_az12;

-- ------------------------------------------------------------------------------------------------------------------------------------

-- Inserting data into Silver erp location table 

insert into silver.erp_loc_a101
(cid,
cntry)
select 
replace(cid, '-', '') as cid,
case when trim(cntry) = 'DE' then 'Germany'
when trim(cntry) in ('US' , 'USA') THEN 'United states'
when trim(cntry) = ' ' or cntry is null  then 'N/A'
else trim(cntry)
end as cntry
from bronze.erp_loc_a101;

-- --------------------------------------------------------------------------------------------------------------------------------------

-- Inserting data into Silver erp category table 

insert into silver.erp_px_cat_g1v2
(
id,
cat,
subcat,
maintenance
)
select 
id,
cat,
subcat,
maintenance
from bronze.erp_px_cat_g1v2;

end$$

DELIMITER ;

SHOW PROCEDURE STATUS WHERE Db='silver';

