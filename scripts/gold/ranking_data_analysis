-- Ranking the data
-- Which 5 products generate the highest revenue?
select
p.product_name,
sum(f.sales_amount) total_revenue
from gold.fact_sales f
left join gold.dim_products p
on p.product_key = f.product_key
group by p.product_name
order by total_revenue desc
limit 5

-- what are the 5 worst performing products in terms of sales
select
p.product_name,
sum(f.sales_amount) total_revenue
from gold.fact_sales f
left join gold.dim_products p
on p.product_key = f.product_key
group by p.product_name
order by total_revenue 
limit 5

-- using row number

select *
from(
select
p.product_name,
sum(f.sales_amount) total_revenue,
row_number() over (order by sum(f.sales_amount) desc) as rank_products
from gold.fact_sales f
left join gold.dim_products p
on p.product_key = f.product_key
group by p.product_name)t
where rank_products<= 5

-- using rank

select *
from(
select
p.product_name,
sum(f.sales_amount) total_revenue,
rank() over (order by sum(f.sales_amount) desc) as rank_products
from gold.fact_sales f
left join gold.dim_products p
on p.product_key = f.product_key
group by p.product_name)t
where rank_products<= 5

-- find the top-10 customers who have generated the highest revenue and 3 customers with the fewest orders placed
select
c.customer_key,
c.first_name,
sum(f.sales_amount) as total_revenue
from gold.fact_sales f
left join gold.dim_customers c
on c.customer_key = f.customer_key
group by c.customer_key, 
c.first_name
order by total_revenue desc
limit 10
-------------------------------------------------------------------------------------
select
c.customer_key,
c.first_name,
count(distinct order_number) as total_orders
from gold.fact_sales f
left join gold.dim_customers c
on c.customer_key = f.customer_key
group by c.customer_key, 
c.first_name
order by total_orders
limit 3
